'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports["default"] = undefined;

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _reactNative = require('react-native');

var _index = require('./style/index');

var _index2 = _interopRequireDefault(_index);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj["default"] = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var Badge = function (_React$Component) {
    (0, _inherits3["default"])(Badge, _React$Component);

    function Badge() {
        (0, _classCallCheck3["default"])(this, Badge);
        return (0, _possibleConstructorReturn3["default"])(this, _React$Component.apply(this, arguments));
    }

    Badge.prototype.render = function render() {
        var _props = this.props;
        var size = _props.size;
        var overflowCount = _props.overflowCount;
        var corner = _props.corner;
        var dot = _props.dot;
        var text = _props.text;
        var children = _props.children;
        var style = _props.style;

        var overflowNum = overflowCount || 99;
        var badgeText = typeof text === 'number' && text > overflowNum ? overflowNum + '+' : text;
        var badgeCls = corner ? 'textCorner' : 'textDom';
        return React.createElement(
            _reactNative.View,
            { style: [_index2["default"].wrap, style] },
            React.createElement(
                _reactNative.View,
                { style: [_index2["default"][badgeCls + 'Wrap']] },
                children,
                !dot ? React.createElement(
                    _reactNative.TouchableWithoutFeedback,
                    null,
                    React.createElement(
                        _reactNative.View,
                        { style: [_index2["default"][badgeCls], _index2["default"]['' + badgeCls + size]] },
                        React.createElement(
                            _reactNative.Text,
                            { style: [_index2["default"].text] },
                            badgeText
                        )
                    )
                ) : React.createElement(
                    _reactNative.TouchableWithoutFeedback,
                    null,
                    React.createElement(_reactNative.View, { style: [_index2["default"].dot, _index2["default"]['dotSize' + size]] })
                )
            )
        );
    };

    return Badge;
}(React.Component);

exports["default"] = Badge;

Badge.propTypes = {
    size: _react.PropTypes.oneOf(['large', 'small']),
    overflowCount: _react.PropTypes.number,
    corner: _react.PropTypes.bool,
    dot: _react.PropTypes.bool,
    text: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number])
};
Badge.defaultProps = {
    size: 'small',
    overflowCount: 99,
    corner: false,
    dot: false
};
module.exports = exports['default'];