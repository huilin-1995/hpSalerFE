'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _reactNative = require('react-native');

var _rnTopview = require('rn-topview');

var _rnTopview2 = _interopRequireDefault(_rnTopview);

var _style = require('./style/');

var _style2 = _interopRequireDefault(_style);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj["default"] = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var ToastContainer = function (_React$Component) {
    (0, _inherits3["default"])(ToastContainer, _React$Component);

    function ToastContainer(props) {
        (0, _classCallCheck3["default"])(this, ToastContainer);

        var _this = (0, _possibleConstructorReturn3["default"])(this, _React$Component.call(this, props));

        _this.timer = setTimeout(function () {
            props.onClose();
            _rnTopview2["default"].remove();
        }, props.duration * 1000);
        return _this;
    }

    ToastContainer.prototype.componentWillUnmount = function componentWillUnmount() {
        clearTimeout(this.timer);
    };

    ToastContainer.prototype.render = function render() {
        var _props = this.props;
        var type = _props.type;
        var content = _props.content;

        var iconType = {
            success: require('./images/success.png'),
            fail: require('./images/fail.png'),
            offline: require('./images/offline.png')
        };
        var iconDom = null;
        if (type === 'loading') {
            iconDom = React.createElement(_reactNative.ActivityIndicator, { animating: true, style: [_style2["default"].centering], color: 'white', size: 'large' });
        } else if (type === 'info') {
            iconDom = null;
        } else {
            iconDom = React.createElement(_reactNative.Image, { source: iconType[type], style: _style2["default"].image });
        }
        return React.createElement(
            _reactNative.View,
            { style: [_style2["default"].container] },
            React.createElement(
                _reactNative.Modal,
                { animationType: 'fade', transparent: true, visible: true, onRequestClose: function onRequestClose() {} },
                React.createElement(
                    _reactNative.View,
                    { style: [_style2["default"].innerContainer] },
                    React.createElement(
                        _reactNative.View,
                        { style: [_style2["default"].innnerWrap] },
                        iconDom,
                        React.createElement(
                            _reactNative.Text,
                            { style: _style2["default"].content },
                            content
                        )
                    )
                )
            )
        );
    };

    return ToastContainer;
}(React.Component);

ToastContainer.defaultProps = {
    duration: 3,
    onClose: function onClose() {}
};
function notice(content, type) {
    var duration = arguments.length <= 2 || arguments[2] === undefined ? 3 : arguments[2];
    var onClose = arguments[3];

    if (typeof duration === 'function') {
        onClose = duration;
        duration = 3;
    }
    _rnTopview2["default"].set(React.createElement(ToastContainer, { content: content, duration: duration, onClose: onClose, type: type }));
}
exports["default"] = {
    SHORT: 3,
    LONG: 8,
    show: function show(content, duration) {
        return notice(content, 'info', duration, function () {});
    },
    info: function info(content, duration, onClose) {
        return notice(content, 'info', duration, onClose);
    },
    success: function success(content, duration, onClose) {
        return notice(content, 'success', duration, onClose);
    },
    fail: function fail(content, duration, onClose) {
        return notice(content, 'fail', duration, onClose);
    },
    offline: function offline(content, duration, onClose) {
        return notice(content, 'offline', duration, onClose);
    },
    loading: function loading(content, duration, onClose) {
        return notice(content, 'loading', duration, onClose);
    },
    hide: function hide() {
        _rnTopview2["default"].remove();
    }
};
module.exports = exports['default'];