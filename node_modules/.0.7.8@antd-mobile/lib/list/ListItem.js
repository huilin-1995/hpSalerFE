'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports["default"] = undefined;

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _reactNative = require('react-native');

var _index = require('./style/index');

var _index2 = _interopRequireDefault(_index);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj["default"] = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var THEMES = _index2["default"].ThemesList;
var ASSETS = _index2["default"].AssetsList;

var Content = function (_React$Component) {
    (0, _inherits3["default"])(Content, _React$Component);

    function Content() {
        (0, _classCallCheck3["default"])(this, Content);
        return (0, _possibleConstructorReturn3["default"])(this, _React$Component.apply(this, arguments));
    }

    Content.prototype.render = function render() {
        return React.createElement(
            _reactNative.Text,
            { style: [THEMES.Content, this.props.style], numberOfLines: 1 },
            this.props.children
        );
    };

    return Content;
}(React.Component);

var AffiliatedContent = function (_React$Component2) {
    (0, _inherits3["default"])(AffiliatedContent, _React$Component2);

    function AffiliatedContent() {
        (0, _classCallCheck3["default"])(this, AffiliatedContent);
        return (0, _possibleConstructorReturn3["default"])(this, _React$Component2.apply(this, arguments));
    }

    AffiliatedContent.prototype.render = function render() {
        return React.createElement(
            _reactNative.Text,
            { style: [THEMES.AffiliatedContent, this.props.style], numberOfLines: 1 },
            this.props.children
        );
    };

    return AffiliatedContent;
}(React.Component);

var Extra = function (_React$Component3) {
    (0, _inherits3["default"])(Extra, _React$Component3);

    function Extra() {
        (0, _classCallCheck3["default"])(this, Extra);
        return (0, _possibleConstructorReturn3["default"])(this, _React$Component3.apply(this, arguments));
    }

    Extra.prototype.render = function render() {
        return React.createElement(
            _reactNative.View,
            { style: { alignItems: 'flex-end' } },
            this.props.children
        );
    };

    return Extra;
}(React.Component);

var Detail = function (_React$Component4) {
    (0, _inherits3["default"])(Detail, _React$Component4);

    function Detail() {
        (0, _classCallCheck3["default"])(this, Detail);
        return (0, _possibleConstructorReturn3["default"])(this, _React$Component4.apply(this, arguments));
    }

    Detail.prototype.render = function render() {
        return React.createElement(
            _reactNative.Text,
            { style: [THEMES.Detail, this.props.style], numberOfLines: 1 },
            this.props.children
        );
    };

    return Detail;
}(React.Component);

var Item = function (_React$Component5) {
    (0, _inherits3["default"])(Item, _React$Component5);

    function Item(props) {
        (0, _classCallCheck3["default"])(this, Item);

        var _this5 = (0, _possibleConstructorReturn3["default"])(this, _React$Component5.call(this, props));

        _this5.state = {
            __lazy: _this5.props.lazy
        };
        return _this5;
    }

    Item.prototype.componentWillMount = function componentWillMount() {
        var _this6 = this;

        if (this.state.__lazy) {
            this.timer = setTimeout(function () {
                return _this6.setState({ __lazy: false });
            }, 500);
        }
    };

    Item.prototype.componentWillUnmount = function componentWillUnmount() {
        if (this.timer) {
            clearTimeout(this.timer);
        }
    };

    Item.prototype.render = function render() {
        if (this.state.__lazy) {
            return React.createElement(_reactNative.View, null);
        }
        var thumbDom = null;
        var contentDom = null;
        var extraDom = null;
        var arrowDom = null;
        if (this.props.thumb) {
            thumbDom = React.createElement(_reactNative.Image, { source: { uri: this.props.thumb }, style: [THEMES.Thumb, this.props.line === 2 ? THEMES.Line2.Thumb : {}] });
        }
        if (this.props.line === 2 && React.isValidElement(this.props.children)) {
            contentDom = React.createElement(
                _reactNative.View,
                { style: { flex: 1 } },
                this.props.children
            );
        } else {
            contentDom = React.createElement(
                _reactNative.Text,
                { style: THEMES.Content, numberOfLines: 1 },
                this.props.children
            );
        }
        if (this.props.extra) {
            if (React.isValidElement(this.props.extra)) {
                extraDom = this.props.extra;
            } else {
                extraDom = React.createElement(
                    _reactNative.Text,
                    { style: THEMES.Extra, numberOfLines: 1 },
                    this.props.extra
                );
            }
        }
        if (this.props.arrow) {
            switch (this.props.arrow) {
                case 'horizontal':
                    arrowDom = React.createElement(_reactNative.Image, { source: { uri: ASSETS.arrowH }, style: THEMES.Arrow });
                    break;
                case 'down':
                    arrowDom = React.createElement(_reactNative.Image, { source: { uri: ASSETS.arrowDown }, style: THEMES.Arrow });
                    break;
                case 'up':
                    arrowDom = React.createElement(_reactNative.Image, { source: { uri: ASSETS.arrowUp }, style: THEMES.Arrow });
                    break;
                default:
                    arrowDom = React.createElement(_reactNative.View, { style: THEMES.Arrow });
                    break;
            }
        }
        var itemStyle = [THEMES.Item, this.props.line === 2 ? THEMES.Line2.Item : {}, this.props.last ? THEMES.Last.Item : {}, this.props.error ? THEMES.Error.Item : {}, this.props.style];
        var itemView = React.createElement(
            _reactNative.View,
            (0, _extends3["default"])({}, this.props, { style: itemStyle }),
            thumbDom,
            contentDom,
            extraDom,
            arrowDom
        );
        if (this.props.onClick) {
            return React.createElement(
                _reactNative.TouchableHighlight,
                { activeOpacity: 1, underlayColor: THEMES.underlayColor, onPress: this.props.onClick, onPressIn: function onPressIn() {}, onPressOut: function onPressOut() {} },
                itemView
            );
        }
        return itemView;
    };

    return Item;
}(React.Component);

exports["default"] = Item;

Item.propTypes = {
    extra: function extra(props, propName) {
        if (props[propName]) {
            if (!React.isValidElement(props[propName]) && typeof props[propName] !== 'string') {
                throw new Error('extra must be a string or element');
            }
        }
    },

    arrow: _react.PropTypes.oneOf(['horizontal', 'down', 'up', ''])
};
Item.defaultProps = {
    lazy: false,
    last: false,
    line: 1
};
Item.Content = Content;
Item.AffiliatedContent = AffiliatedContent;
Item.Extra = Extra;
Item.Detail = Detail;
module.exports = exports['default'];