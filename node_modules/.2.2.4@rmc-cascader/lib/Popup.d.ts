import * as React from 'react';
import { PopupPickerProps } from 'rmc-picker/lib/PopupPickerTypes';
import { CascaderProps, CascaderValue } from './CascaderTypes';
export interface PopupCascaderProps extends PopupPickerProps, CascaderProps {
    popupPrefixCls?: string;
    pickerPrefixCls?: string;
    visible?: boolean;
    mode?: string;
    onPickerChange?: (date: CascaderValue) => void;
    onChange?: (date: CascaderValue) => void;
    onVisibleChange?: (visible: boolean) => void;
}
export interface PopupCascaderState {
    pickerValue?: CascaderValue;
    visible?: boolean;
}
export default class PopupCascader extends React.Component<PopupCascaderProps, PopupCascaderState> {
    static defaultProps: {
        popupPrefixCls: string;
        onVisibleChange: () => void;
        cols: number;
        onChange: () => void;
        onPickerChange: () => void;
    };
    constructor(props: PopupCascaderProps);
    componentWillReceiveProps(nextProps: any): void;
    onPickerChange: (value: any) => void;
    onOk: () => void;
    setVisibleState(visible: any): void;
    getModal(): JSX.Element;
    fireVisibleChange: (visible: any) => void;
    render(): JSX.Element;
}
