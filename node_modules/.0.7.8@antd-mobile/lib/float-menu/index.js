'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports["default"] = undefined;

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _reactNativeMenu = require('react-native-menu');

var _reactNativeMenu2 = _interopRequireDefault(_reactNativeMenu);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj["default"] = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

// import splitObject from '../_util/splitObject';
var FloatMenu = function (_React$Component) {
    (0, _inherits3["default"])(FloatMenu, _React$Component);

    function FloatMenu() {
        (0, _classCallCheck3["default"])(this, FloatMenu);
        return (0, _possibleConstructorReturn3["default"])(this, _React$Component.apply(this, arguments));
    }

    FloatMenu.prototype.render = function render() {
        var _props = this.props;
        var children = _props.children;
        var onSelect = _props.onSelect;
        var overlay = _props.overlay;
        var disabled = _props.disabled;
        var name = _props.name;
        var style = _props.style;
        var triggerStyle = _props.triggerStyle;
        var overlayStyle = _props.overlayStyle;
        var contextStyle = _props.contextStyle;
        var renderOverlayComponent = _props.renderOverlayComponent;

        var menuOptionsProp = {
            optionsContainerStyle: overlayStyle,
            renderOptionsContainer: renderOverlayComponent
        };
        return React.createElement(
            _reactNativeMenu.MenuContext,
            { ref: 'menuContext', style: contextStyle },
            React.createElement(
                _reactNativeMenu2["default"],
                { name: name, onSelect: onSelect, style: style },
                React.createElement(
                    _reactNativeMenu.MenuTrigger,
                    { disabled: disabled, style: triggerStyle },
                    children
                ),
                React.createElement(
                    _reactNativeMenu.MenuOptions,
                    menuOptionsProp,
                    overlay
                )
            )
        );
    };

    return FloatMenu;
}(React.Component);

exports["default"] = FloatMenu;

FloatMenu.propTypes = {
    children: _react.PropTypes.any
};
FloatMenu.defaultProps = {
    onSelect: function onSelect() {}
};
FloatMenu.Item = _reactNativeMenu.MenuOption;
module.exports = exports['default'];