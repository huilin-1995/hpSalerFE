'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports["default"] = undefined;

var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _flex = require('../flex');

var _flex2 = _interopRequireDefault(_flex);

var _index = require('../carousel/index.web');

var _index2 = _interopRequireDefault(_index);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj["default"] = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function noop() {}

var Grid = function (_React$Component) {
    (0, _inherits3["default"])(Grid, _React$Component);

    function Grid(props) {
        (0, _classCallCheck3["default"])(this, Grid);

        var _this = (0, _possibleConstructorReturn3["default"])(this, _React$Component.call(this, props));

        _this.onTouchStart = function (index) {
            if (_this.props.needActive) {
                _this.setState({
                    hover: true,
                    hoverIndex: index
                });
            }
        };
        _this.onTouchEnd = function () {
            if (_this.props.needActive) {
                _this.setState({
                    hover: false
                });
            }
        };
        _this.state = {
            hover: false
        };
        return _this;
    }

    Grid.prototype.componentWillMount = function componentWillMount() {
        this.clientWidth = document.documentElement.clientWidth;
    };

    Grid.prototype.render = function render() {
        var _classNames,
            _this2 = this;

        var _props = this.props;
        var className = _props.className;
        var data = _props.data;
        var prefixCls = _props.prefixCls;
        var hasLine = _props.hasLine;
        var isCarousel = _props.isCarousel;
        var needActive = _props.needActive;

        var wrapCls = (0, _classnames2["default"])((_classNames = {}, (0, _defineProperty3["default"])(_classNames, prefixCls, true), (0, _defineProperty3["default"])(_classNames, prefixCls + '-line', hasLine), (0, _defineProperty3["default"])(_classNames, className, className), _classNames));
        var itemCls = (0, _classnames2["default"])((0, _defineProperty3["default"])({}, prefixCls + '-item-hover', needActive));
        var dataLength = data.length;
        var FlexCount = Math.ceil(dataLength / 4);
        var gridContent = [];
        var carouselContent = [];
        var flexItemStyle = {
            height: this.clientWidth / 4 + 'px',
            paddingTop: (this.clientWidth / 4 - 40) / 2 + 'px'
        };

        var _loop = function _loop(i) {
            var flexContent = [];

            var _loop2 = function _loop2(j) {
                if (i * 4 + j < dataLength) {
                    flexContent.push(React.createElement(
                        _flex2["default"].Item,
                        { className: itemCls, style: flexItemStyle, onClick: function onClick() {
                                _this2.props.onClick(data[i * 4 + j], i * 4 + j);
                            }, key: 'griditem-' + (i * 4 + j) },
                        React.createElement('div', { className: prefixCls + '-icon', style: { backgroundImage: 'url(' + data[i * 4 + j].icon + ')' } }),
                        React.createElement(
                            'div',
                            { className: prefixCls + '-text' },
                            data[i * 4 + j].text
                        )
                    ));
                } else {
                    flexContent.push(React.createElement(_flex2["default"].Item, { style: flexItemStyle, key: 'griditem-' + (i * 4 + j) }));
                }
            };

            for (var j = 0; j < 4; j++) {
                _loop2(j);
            }
            gridContent.push(React.createElement(
                _flex2["default"],
                { key: 'fridflex' + i },
                flexContent
            ));
        };

        for (var i = 0; i < FlexCount; i++) {
            _loop(i);
        }
        if (isCarousel) {
            var gridContentLength = gridContent.length;
            for (var k = 0, len = Math.ceil(gridContentLength / 2); k < len; k++) {
                if (k * 2 < gridContentLength) {
                    carouselContent.push();
                }
                if (k * 2 + 1 < gridContentLength) {
                    carouselContent.push(React.createElement(
                        'div',
                        { key: 'carouselitem-' + (k * 2 + 1) },
                        gridContent[k * 2],
                        gridContent[k * 2 + 1]
                    ));
                } else {
                    carouselContent.push(React.createElement(
                        'div',
                        { key: 'carouselitem-' + k * 2 },
                        gridContent[k * 2],
                        React.createElement(
                            _flex2["default"],
                            null,
                            React.createElement(_flex2["default"].Item, { className: itemCls, style: flexItemStyle }),
                            React.createElement(_flex2["default"].Item, { className: itemCls, style: flexItemStyle }),
                            React.createElement(_flex2["default"].Item, { className: itemCls, style: flexItemStyle }),
                            React.createElement(_flex2["default"].Item, { className: itemCls, style: flexItemStyle })
                        )
                    ));
                }
            }
        }
        return React.createElement(
            'div',
            { className: wrapCls },
            isCarousel ? React.createElement(
                _index2["default"],
                { mode: 'banner', infinite: false },
                carouselContent
            ) : gridContent
        );
    };

    return Grid;
}(React.Component);

exports["default"] = Grid;

Grid.propTypes = {
    prefixCls: _react.PropTypes.string,
    data: _react.PropTypes.array,
    onClick: _react.PropTypes.func,
    hasLine: _react.PropTypes.bool,
    needActive: _react.PropTypes.bool,
    isCarousel: _react.PropTypes.bool
};
Grid.defaultProps = {
    prefixCls: 'am-grid',
    data: [],
    onClick: noop,
    hasLine: true,
    needActive: true,
    isCarousel: false
};
module.exports = exports['default'];