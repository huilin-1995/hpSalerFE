'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _Cascader = require('./Cascader');

var _Cascader2 = _interopRequireDefault(_Cascader);

var _utils = require('./utils');

var _Popup = require('rmc-picker/lib/Popup');

var _Popup2 = _interopRequireDefault(_Popup);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj["default"] = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var EXCLUDE_PROPS = {
    popupPrefixCls: 1,
    pickerPrefixCls: 1,
    visible: 1,
    mode: 1,
    onPickerChange: 1,
    onChange: 1,
    onVisibleChange: 1
};

var PopupCascader = function (_React$Component) {
    (0, _inherits3["default"])(PopupCascader, _React$Component);

    function PopupCascader(props) {
        (0, _classCallCheck3["default"])(this, PopupCascader);

        var _this = (0, _possibleConstructorReturn3["default"])(this, _React$Component.call(this, props));

        _this.onPickerChange = function (value) {
            // console.log('inner onPickerChange', value);
            _this.setState({
                pickerValue: value
            });
            _this.props.onPickerChange(value);
        };
        _this.onOk = function () {
            var _this$props = _this.props;
            var value = _this$props.value;
            var cols = _this$props.cols;
            var data = _this$props.data;
            // console.log('inner onOk', this.state.pickerValue);

            _this.props.onChange((0, _utils.getDefaultValue)(data, _this.state.pickerValue || value, cols).filter(function (c) {
                return !!c;
            }));
        };
        _this.fireVisibleChange = function (visible) {
            if (_this.state.visible !== visible) {
                if (!('visible' in _this.props)) {
                    _this.setVisibleState(visible);
                }
                _this.props.onVisibleChange(visible);
            }
        };
        _this.state = {
            pickerValue: null,
            visible: _this.props.visible || false
        };
        return _this;
    }

    PopupCascader.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
        if ('visible' in nextProps) {
            this.setVisibleState(nextProps.visible);
        }
    };

    PopupCascader.prototype.setVisibleState = function setVisibleState(visible) {
        this.setState({
            visible: visible
        });
        if (!visible) {
            this.setState({
                pickerValue: null
            });
        }
    };

    PopupCascader.prototype.getModal = function getModal() {
        var _props = this.props;
        var data = _props.data;
        var cols = _props.cols;
        var prefixCls = _props.prefixCls;
        var pickerPrefixCls = _props.pickerPrefixCls;
        var value = _props.value;

        var extraProps = {
            data: data
        };
        if (pickerPrefixCls) {
            extraProps.pickerPrefixCls = pickerPrefixCls;
        }
        if (prefixCls) {
            extraProps.prefixCls = prefixCls;
        }
        return React.createElement(_Cascader2["default"], (0, _extends3["default"])({ value: this.state.pickerValue || value, cols: cols, onChange: this.onPickerChange }, extraProps));
    };

    PopupCascader.prototype.render = function render() {
        var props = (0, _utils.exclude)(this.props, EXCLUDE_PROPS);
        props.prefixCls = this.props.popupPrefixCls;
        return React.createElement(_Popup2["default"], (0, _extends3["default"])({}, props, { onVisibleChange: this.fireVisibleChange, onOk: this.onOk, content: this.getModal(), visible: this.state.visible }));
    };

    return PopupCascader;
}(React.Component);

exports["default"] = PopupCascader;

PopupCascader.defaultProps = {
    popupPrefixCls: 'rmc-picker-popup',
    onVisibleChange: _utils.noop,
    cols: _utils.COLS,
    onChange: _utils.noop,
    onPickerChange: _utils.noop
};
module.exports = exports['default'];