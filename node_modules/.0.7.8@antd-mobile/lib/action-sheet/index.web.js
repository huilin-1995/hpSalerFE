'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports["default"] = undefined;

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _reactDom = require('react-dom');

var ReactDOM = _interopRequireWildcard(_reactDom);

var _rcDialog = require('rc-dialog');

var _rcDialog2 = _interopRequireDefault(_rcDialog);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _index = require('../icon/index.web');

var _index2 = _interopRequireDefault(_index);

var _objectAssign = require('object-assign');

var _objectAssign2 = _interopRequireDefault(_objectAssign);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj["default"] = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var NORMAL = 'NORMAL';
var SHARE = 'SHARE';
var closeFn = function closeFn() {};
function createActionSheet(flag, config, callback) {
    var props = (0, _objectAssign2["default"])({}, {
        prefixCls: 'am-action-sheet'
    }, config);
    var prefixCls = props.prefixCls;
    var transitionName = props.transitionName;
    var maskTransitionName = props.maskTransitionName;
    var _props$maskClosable = props.maskClosable;
    var maskClosable = _props$maskClosable === undefined ? true : _props$maskClosable;

    var div = document.createElement('div');
    document.body.appendChild(div);
    function close() {
        if (div) {
            ReactDOM.unmountComponentAtNode(div);
            div.parentNode.removeChild(div);
            div = null;
        }
    }
    closeFn = close;
    function cb(info) {
        callback(info);
        close();
    }
    var title = props.title;
    var message = props.message;
    var options = props.options;
    var destructiveButtonIndex = props.destructiveButtonIndex;
    var cancelButtonIndex = props.cancelButtonIndex;

    var titleMsg = [title ? React.createElement(
        'h3',
        { key: '0', className: prefixCls + '-title' },
        title
    ) : null, message ? React.createElement(
        'div',
        { key: '1', className: prefixCls + '-message' },
        message
    ) : null];
    var children = null;
    switch (flag) {
        case NORMAL:
            children = React.createElement(
                'div',
                { className: prefixCls + '-normal' },
                titleMsg,
                React.createElement(
                    'ul',
                    { className: prefixCls + '-button-list' },
                    options.map(function (item, index) {
                        var _cls;

                        var extraProp = {
                            onClick: function onClick() {
                                return cb(index);
                            }
                        };
                        var li = React.createElement(
                            'li',
                            (0, _extends3["default"])({ className: [prefixCls + '-button-list-item'], key: index }, extraProp),
                            item
                        );
                        var cls = (_cls = {}, (0, _defineProperty3["default"])(_cls, prefixCls + '-destructive-button', destructiveButtonIndex === index), (0, _defineProperty3["default"])(_cls, prefixCls + '-cancel-button', cancelButtonIndex === index), _cls);
                        if (cancelButtonIndex === index || destructiveButtonIndex === index) {
                            li = React.createElement(
                                'li',
                                (0, _extends3["default"])({ key: index, className: (0, _classnames2["default"])(cls) }, extraProp),
                                item,
                                cancelButtonIndex === index ? React.createElement('span', { className: prefixCls + '-cancel-button-mask' }) : null
                            );
                        }
                        return li;
                    })
                )
            );
            break;
        case SHARE:
            children = React.createElement(
                'div',
                { className: prefixCls + '-share' },
                titleMsg,
                React.createElement(
                    'ul',
                    { className: prefixCls + '-share-content' },
                    options.map(function (item, index) {
                        var extraProp = {
                            onClick: function onClick() {
                                return cb(index);
                            }
                        };
                        return React.createElement(
                            'li',
                            (0, _extends3["default"])({ key: index }, extraProp),
                            React.createElement(
                                'p',
                                { className: prefixCls + '-share-item-icon' },
                                item.iconName ? React.createElement(_index2["default"], { type: item.iconName }) : item.icon
                            ),
                            React.createElement(
                                'p',
                                { className: prefixCls + '-share-item-title' },
                                item.title
                            )
                        );
                    })
                )
            );
            break;
        default:
            children = React.createElement(
                'div',
                { className: prefixCls + '-custom' },
                titleMsg,
                React.createElement(
                    'div',
                    { className: prefixCls + '-custom-content' },
                    props.component
                )
            );
    }
    ReactDOM.render(React.createElement(
        _rcDialog2["default"],
        { prefixCls: prefixCls, visible: true, title: '', footer: '', transitionName: transitionName || 'am-slide-up', maskTransitionName: maskTransitionName || 'am-fade', onClose: close, maskClosable: maskClosable },
        children
    ), div);
}

var ActionSheet = function ActionSheet() {
    (0, _classCallCheck3["default"])(this, ActionSheet);
};

exports["default"] = ActionSheet;

ActionSheet.showActionSheetWithOptions = function (config) {
    var callback = arguments.length <= 1 || arguments[1] === undefined ? function () {} : arguments[1];

    createActionSheet(NORMAL, config, callback);
};
ActionSheet.showShareActionSheetWithOptions = function (config) {
    var callback = arguments.length <= 1 || arguments[1] === undefined ? function () {} : arguments[1];

    createActionSheet(SHARE, config, callback);
};
ActionSheet.showActionSheetWithCustom = function (config) {
    var callback = arguments.length <= 1 || arguments[1] === undefined ? function () {} : arguments[1];

    createActionSheet(null, config, callback);
};
ActionSheet.close = function () {
    closeFn();
};
module.exports = exports['default'];