'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _toConsumableArray2 = require('babel-runtime/helpers/toConsumableArray');

var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _reactNative = require('react-native');

var _modal = require('../modal');

var _modal2 = _interopRequireDefault(_modal);

var _index = require('./style/index');

var _index2 = _interopRequireDefault(_index);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj["default"] = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var SwipeAction = function (_React$Component) {
    (0, _inherits3["default"])(SwipeAction, _React$Component);

    function SwipeAction(props) {
        (0, _classCallCheck3["default"])(this, SwipeAction);

        var _this = (0, _possibleConstructorReturn3["default"])(this, _React$Component.call(this, props));

        _this.onLongPress = function () {
            _this.setState({
                showModal: true
            });
        };
        _this.renderAndroidBtn = function () {
            var _this$props = _this.props;
            var left = _this$props.left;
            var right = _this$props.right;

            var actions = [].concat((0, _toConsumableArray3["default"])(left), (0, _toConsumableArray3["default"])(right));
            return React.createElement(
                _reactNative.View,
                { style: [_index2["default"].actions] },
                actions.map(function (btn, i) {
                    return React.createElement(
                        _reactNative.View,
                        { key: i, style: [_index2["default"].buttonWrap] },
                        React.createElement(
                            _reactNative.TouchableOpacity,
                            { onPress: function onPress() {
                                    _this.onAndroidBtnClick(btn);
                                } },
                            React.createElement(
                                _reactNative.Text,
                                { style: [_index2["default"].button] },
                                btn.text || 'Click'
                            )
                        )
                    );
                })
            );
        };
        _this.state = {
            showModal: false
        };
        return _this;
    }

    SwipeAction.prototype.setModalVisible = function setModalVisible(visible) {
        this.setState({
            showModal: visible
        });
    };

    SwipeAction.prototype.onClose = function onClose() {
        this.props.onClose();
        this.setState({
            showModal: false
        });
    };

    SwipeAction.prototype.onAndroidBtnClick = function onAndroidBtnClick(btn) {
        var onPress = btn.onPress;
        if (onPress) {
            onPress();
        }
        if (this.props.autoClose) {
            this.onClose();
        }
    };

    SwipeAction.prototype._renderAndroidModal = function _renderAndroidModal() {
        var _this2 = this;

        return React.createElement(_modal2["default"], { visible: this.state.showModal, transparent: true, maskClosable: true, onShow: this.props.onOpen, onClose: this.props.onClose, title: this.props.title, onRequestClose: function onRequestClose() {
                _this2.setModalVisible(false);
            }, footer: this.renderAndroidBtn() });
    };

    SwipeAction.prototype.render = function render() {
        var _props = this.props;
        var style = _props.style;
        var children = _props.children;

        return React.createElement(
            _reactNative.View,
            { style: style },
            React.createElement(
                _reactNative.TouchableOpacity,
                { onLongPress: this.onLongPress },
                React.createElement(
                    _reactNative.View,
                    null,
                    children
                )
            ),
            this.state.showModal ? this._renderAndroidModal() : null
        );
    };

    return SwipeAction;
}(React.Component);

SwipeAction.propTypes = {
    autoClose: _react.PropTypes.bool,
    disabled: _react.PropTypes.bool,
    title: _react.PropTypes.string,
    left: _react.PropTypes.arrayOf(_react.PropTypes.object),
    right: _react.PropTypes.arrayOf(_react.PropTypes.object),
    onOpen: _react.PropTypes.func,
    onClose: _react.PropTypes.func,
    children: _react.PropTypes.any
};
SwipeAction.defaultProps = {
    title: '请确认操作',
    autoClose: false,
    disabled: false,
    left: [],
    right: [],
    onOpen: function onOpen() {},
    onClose: function onClose() {}
};
exports["default"] = SwipeAction;
module.exports = exports['default'];