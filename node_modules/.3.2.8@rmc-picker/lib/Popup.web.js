'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _rcDialog = require('rc-dialog');

var _rcDialog2 = _interopRequireDefault(_rcDialog);

var _PopupMixin = require('./PopupMixin');

var _PopupMixin2 = _interopRequireDefault(_PopupMixin);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj["default"] = obj; return newObj; } }

var PopupPicker = React.createClass({
    displayName: 'PopupPicker',

    mixins: [_PopupMixin2["default"]],
    getDefaultProps: function getDefaultProps() {
        return {
            prefixCls: 'rmc-picker-popup',
            triggerType: 'onClick',
            WrapComponent: 'span'
        };
    },
    getModal: function getModal() {
        var props = this.props;
        if (!this.state.visible) {
            return null;
        }
        return React.createElement(
            _rcDialog2["default"],
            { prefixCls: '' + props.prefixCls, visible: true, transitionName: props.popupTransitionName, maskTransitionName: props.maskTransitionName, onClose: this.hide, style: props.modalStyle },
            React.createElement(
                'div',
                null,
                React.createElement(
                    'div',
                    { className: props.prefixCls + '-header' },
                    React.createElement(
                        'div',
                        { className: props.prefixCls + '-item ' + props.prefixCls + '-header-left', onClick: this.onDismiss },
                        props.dismissText
                    ),
                    React.createElement(
                        'div',
                        { className: props.prefixCls + '-item ' + props.prefixCls + '-title' },
                        props.title
                    ),
                    React.createElement(
                        'div',
                        { className: props.prefixCls + '-item ' + props.prefixCls + '-header-right', onClick: this.onOk },
                        props.okText
                    )
                ),
                this.props.content
            )
        );
    },
    render: function render() {
        return this.getRender();
    }
});
exports["default"] = PopupPicker;
module.exports = exports['default'];