'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports["default"] = undefined;

var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _icon = require('../icon');

var _icon2 = _interopRequireDefault(_icon);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj["default"] = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var Tag = function (_React$Component) {
    (0, _inherits3["default"])(Tag, _React$Component);

    function Tag(props) {
        (0, _classCallCheck3["default"])(this, Tag);

        var _this = (0, _possibleConstructorReturn3["default"])(this, _React$Component.call(this, props));

        _this.onClick = function () {
            var _this$props = _this.props;
            var type = _this$props.type;
            var disabled = _this$props.disabled;
            var closable = _this$props.closable;
            var onChange = _this$props.onChange;

            if (type === 'read' || disabled) {
                return;
            }
            if (closable) {
                _this.onClose();
            } else {
                (function () {
                    var isSelect = _this.state.selected;
                    _this.setState({
                        selected: !isSelect
                    }, function () {
                        onChange(!isSelect);
                    });
                })();
            }
        };
        _this.onClose = function () {
            var _this$props2 = _this.props;
            var onClose = _this$props2.onClose;
            var afterClose = _this$props2.afterClose;

            onClose();
            _this.setState({
                closed: true
            }, afterClose);
        };
        _this.state = {
            selected: props.selected,
            closed: false
        };
        return _this;
    }

    Tag.prototype.render = function render() {
        var _classNames;

        var _props = this.props;
        var children = _props.children;
        var className = _props.className;
        var prefixCls = _props.prefixCls;
        var type = _props.type;
        var size = _props.size;
        var disabled = _props.disabled;
        var closable = _props.closable;

        var selected = this.state.selected;
        var wrapCls = (0, _classnames2["default"])((_classNames = {}, (0, _defineProperty3["default"])(_classNames, className, !!className), (0, _defineProperty3["default"])(_classNames, prefixCls, true), (0, _defineProperty3["default"])(_classNames, prefixCls + '-normal', !selected), (0, _defineProperty3["default"])(_classNames, prefixCls + '-active', (selected || closable) && !disabled && type !== 'read'), (0, _defineProperty3["default"])(_classNames, prefixCls + '-read', type === 'read'), (0, _defineProperty3["default"])(_classNames, prefixCls + '-disabled', disabled), (0, _defineProperty3["default"])(_classNames, prefixCls + '-size-small', size === 'small'), (0, _defineProperty3["default"])(_classNames, prefixCls + '-size-large', size === 'large'), _classNames));
        var close = closable && !disabled && type !== 'read' && size === 'large' ? React.createElement(
            'div',
            { className: prefixCls + '-close' },
            React.createElement(_icon2["default"], { type: 'cross' })
        ) : null;
        return this.state.closed ? null : React.createElement(
            'div',
            { className: wrapCls, onClick: this.onClick },
            React.createElement(
                'div',
                { className: prefixCls + '-text' },
                children
            ),
            close
        );
    };

    return Tag;
}(React.Component);

exports["default"] = Tag;

Tag.defaultProps = {
    prefixCls: 'am-tag',
    type: 'read',
    disabled: false,
    size: 'large',
    closable: false,
    selected: false,
    onChange: function onChange() {},
    onClose: function onClose() {},
    afterClose: function afterClose() {}
};
module.exports = exports['default'];